Problem -> Range Sum Query 2D - Mutable

Approach->Question is like we have given two coordinates and we have to find sum of matrix that will made between these two points so brute force is too traverse on whole matrix made and calculate the sum but the TC is very huge so we move to next approach, What we do is we add elements of row if row is 1 2 3 then we make this as 1 3 6 because 1 1+2 1+2+3 in this we do same for the coloumn and we deal on that matrix only now. Now to find sum of that region we doresult between r2 and c2 region is =>  (r2,c2) - [(r2,c1-1) + (r1-1,c2) - (r1-1,c1-1)] and in code we made one more conditon that is if any r1,c1,r2,c2 is 0 then return 0 to us .

TC is O(m*n)  SC is O(m*n)


Code-> class NumMatrix {

    int[][] matrix;
    public NumMatrix(int[][] matrix) {
        for(int i=0;i<matrix.length;i++){
            for(int j=1;j<matrix[0].length;j++){
                matrix[i][j] += matrix[i][j-1];
            }
        }
        
        for(int i=1;i<matrix.length;i++){
            for(int j=0;j<matrix[0].length;j++){
                matrix[i][j] += matrix[i-1][j];
            }
        }
        
        this.matrix = matrix;
    }
    
    public int sumRegion(int row1, int col1, int row2, int col2) {
        int total = matrix[row2][col2];
        int extra = (col1!=0?matrix[row2][col1-1]:0) + (row1!=0?matrix[row1-1][col2]:0) - ((row1!=0 && col1!=0)?matrix[row1-1][col1-1]:0);
        return total - extra;
    }
}
